@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-bar">
    <div class="container-fluid">
        <div class="col-md-6">
            <div class="search-btn">
                <span><i class="fa fa-search"></i></span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="top-cat-box">
                <div class="col-md-12">
                    <div class="menu">
                        <ul>
                            <li><a href="#">تماس با ما</a></li>
                            <li><a href="#">درباره ما</a></li>
                            <li><a href="#">مقالات</a></li>
                            <AuthorizeView>
                                <NotAuthorized>
                                    <li>
                                        <button type="button" class="btn btn-link btn-sm" style="color:#7b7272;" @onclick="btnRegister_Click">
                                            @(DataDictionary.Register)
                                        </button>
                                    </li>
                                    <li>
                                        <button type="button" class="btn btn-link btn-sm" style="color:#7b7272;" @onclick="btnLogIn_Click">
                                            @(DataDictionary.LogIn)
                                        </button>
                                    </li>
                                </NotAuthorized>
                                <Authorized>
                                    <li>
                                        <a href="/User/Update?userId=@context.User.FindFirst("UserId").Value">@(DataDictionary.EditProfile)</a>
                                    </li>
                                    <li>
                                        <a>@(context.User.FindFirst("Email").Value)</a>
                                    </li>
                                    <li>
                                        <button type="button" class="btn btn-link btn-sm" style="color:#7b7272;" @onclick="btnLogOut_Click">
                                            @(DataDictionary.LogOut)
                                        </button>
                                    </li>
                                </Authorized>
                            </AuthorizeView>
                        </ul>
                    </div>
                </div>
                @* <div class="col-md-3">
                    <div class="show-cat">
                        <span>
                            دسته ها
                            <i class="fa fa-bars"></i>
                        </span>
                    </div>
                </div> *@
            </div>
        </div>
    </div>
</div>
<div class="main-header">
    <div class="container-fluid">
        <div class="col-md-10">
            <div class="main-menu">
                <ul>
                    <li><a href="#">اتاق خبر</a></li>
                    <li><a href="#">اقتصادی</a></li>
                    <li><a href="#">انجمن</a></li>
                    <li><a href="#">گروه رسانه ای</a></li>
                    <li><a href="/Posts">خبر ها</a></li>
                    <li><a href="/Admin/Post/Posts">مدیریت خبر ها</a></li>
                    <li><a href="/AddLog">افزودن خطا</a></li>
                    <li><a href="/DisplayLogs"> خطا ها</a></li>
                </ul>
            </div>
        </div>
        <div class="col-md-2">
            <div class="social-box">
                <ul>
                    <li><a href="#"><i class="fa fa-twitter"></i></a></li>
                    <li><a href="#"><i class="fa fa-facebook"></i></a></li>
                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                </ul>
            </div>
        </div>
    </div>
</div>
<div class="clear-fix"></div>

@code {

    public int UserId { get; set; }

    #region Events

    #region btnLogIn_Click

    public async Task btnLogIn_Click()
    {
        var _returnUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

        NavigationManager.NavigateTo(uri: $"/User/Login?returnUrl={_returnUrl}");
    }

    #endregion \btnLogIn_Click

    #region btnLogOut_Click

    public async Task btnLogOut_Click()
    {
        var _uri = NavigationManager.Uri;

        var _returnUrl = NavigationManager.ToBaseRelativePath(_uri);

        await LocalStorageService.RemoveItemAsync(key: "token");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo(_returnUrl);
    }

    #endregion \btnLogOut_Click

    #region btnRegister_Click

    public async Task btnRegister_Click()
    {
        var _returnUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

        NavigationManager.NavigateTo($"/User/Register?returnUrl={_returnUrl}");
    }

    #endregion \btnRegister_Click

    #endregion \Events
}